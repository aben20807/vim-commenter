Before:
  let s:commentMap = {
    \ 'c':          { 'll': '// ',  'bl': '/* ',    'br': ' */'     },
    \ 'conf':       { 'll': '# '                                    },
    \ 'cpp':        { 'll': '// ',  'bl': '/* ',    'br': ' */'     },
    \ 'css':        {               'bl': '/* ',    'br': ' */'     },
    \ 'gnuplot':    { 'll': '# '                                    },
    \ 'html':       {               'bl': '<!-- ',  'br': ' -->'    },
    \ 'htmlm4':     {               'bl': '<!-- ',  'br': ' -->'    },
    \ 'java':       { 'll': '// ',  'bl': '/* ',    'br': ' */'     },
    \ 'javascript': { 'll': '// ',  'bl': '/* ',    'br': ' */'     },
    \ 'lex':        { 'll': '// ',  'bl': '/* ',    'br': ' */'     },
    \ 'lisp':       { 'll': '; ',   'bl': '#| ',    'br': ' |#'     },
    \ 'make':       { 'll': '# '                                    },
    \ 'prolog':     { 'll': '% '                                    },
    \ 'python':     { 'll': '# '                                    },
    \ 'rust':       { 'll': '// ',  'bl': '/* ',    'br': ' */'     },
    \ 'sh':         { 'll': '# '                                    },
    \ 'tmux':       { 'll': '# '                                    },
    \ 'vader':      { 'll': '" '                                    },
    \ 'vim':        { 'll': '" '                                    },
    \ 'yacc':       { 'll': '// ',  'bl': '/* ',    'br': ' */'     }
    \ }
  let s:ft = &filetype
  let b:commenter_supported = 1
  if exists('g:commenter_custom_map') && has_key(g:commenter_custom_map, s:ft)
    let b:commenter_formatmap = g:commenter_custom_map[s:ft]
  elseif commenter#formatmap#HasFormat(s:ft)
    let b:commenter_formatmap = commenter#formatmap#GetFormat(s:ft)
  else
    let b:commenter_supported = 0
  endif

  " for adding
  for i in ['ll', 'bl', 'br']
    if !has_key(b:commenter_formatmap, i)
      let b:commenter_formatmap[i] = ''
    endif
  endfor

  " for searching: remove leading and trailing  spaces
  let b:commenter_formatmap_s = copy(b:commenter_formatmap)
  if g:commenter_trim_whitespace
    for i in ['ll', 'bl', 'br']
      let b:commenter_formatmap_s[i] =
        \ substitute(b:commenter_formatmap[i], '^\s\+\|\s\+$', '', '')
    endfor
  endif
