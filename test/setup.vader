Before:
  let s:commentMap = {
              \ 'c':          { 'll': '// ', 'bl': '/* ', 'br': ' */' },
              \ 'conf':       { 'll': '# '                            },
              \ 'cpp':        { 'll': '// ', 'bl': '/* ', 'br': ' */' },
              \ 'html':       { 'bl': '<!-- ', 'br': ' -->'           },
              \ 'htmlm4':     { 'bl': '<!-- ', 'br': ' -->'           },
              \ 'java':       { 'll': '// ', 'bl': '/* ', 'br': ' */' },
              \ 'javascript': { 'll': '// ', 'bl': '/* ', 'br': ' */' },
              \ 'lex':        { 'll': '// ', 'bl': '/* ', 'br': ' */' },
              \ 'lisp':       { 'll': '; '                            },
              \ 'make':       { 'll': '# '                            },
              \ 'prolog':     { 'll': '% '                            },
              \ 'python':     { 'll': '# '                            },
              \ 'rust':       { 'll': '// ', 'bl': '/* ', 'br': ' */' },
              \ 'sh':         { 'll': '# '                            },
              \ 'tmux':       { 'll': '# '                            },
              \ 'vim':        { 'll': '" '                            },
              \ 'yacc':       { 'll': '// ', 'bl': '/* ', 'br': ' */' }
              \ }
  let s:ft = &filetype
  let b:commenter_supported = 1
  if exists('g:commenter_custom_map') && has_key(g:commenter_custom_map, s:ft)
      let b:formatMap = g:commenter_custom_map[s:ft]
  elseif has_key(s:commentMap, s:ft)
      let b:formatMap = s:commentMap[s:ft]
  else
      let b:commenter_supported = 0
  endif
  let b:ll = has_key(b:formatMap, 'll') ? b:formatMap['ll'] : ''
  let b:bl = has_key(b:formatMap, 'bl') ? b:formatMap['bl'] : ''
  let b:br = has_key(b:formatMap, 'br') ? b:formatMap['br'] : ''
